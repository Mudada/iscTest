
==================== FINAL INTERFACE ====================
2017-09-01 16:00:55.474438 UTC

interface main@main:Main [orphan module] 8002
  interface hash: debd144bc90496af5887edef4330a97a
  ABI hash: 1f670c6ad5314978a14692b5b094b001
  export-list hash: 2880c8c14fa6474c36c32ea551fb16ad
  orphan hash: bc2af021388eedf0d35c834567b13f27
  flag hash: 8bd348ac168f746cddf4fbdb5a6a2c37
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj
                      hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1
                      iscTest-0.1.0.0@iscTest-0.1.0.0-3R7qjVtvxBgIIvFlPyswqz
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      quickcheck-io-0.2.0@quickcheck-io-0.2.0-4pLO1WRxoBW9gt8EnME0zS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      setenv-0.1.1.3@setenv-0.1.1.3-8dEhk6JWvlmCmVyBammSpu
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      tf-random-0.5@tf-random-0.5-CJZw1ZWS5MOJlR60HqKEZL
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         quickcheck-io-0.2.0@quickcheck-io-0.2.0-4pLO1WRxoBW9gt8EnME0zS:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu:Test.QuickCheck 7a1791e2e66f06ce3b95a443f0d4b1ed
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu:Test.QuickCheck.Arbitrary 7186418da62e356916f17711482dca2f
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu:Test.QuickCheck.Gen 8c21a18006b7ca28eeb63c6653bc55ab
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu:Test.QuickCheck.Modifiers a565cc483f7918630544028be1066ce5
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Typeable 9257e47d10882145c67c5b489965cfb7
import  -/  base-4.9.1.0:Data.Typeable.Internal 0e9bdefa4325a0112d8e73b5e1e1f85d
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj:Test.Hspec 04ea8eba4a0731a497f82df2f1be76d5
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Runner c79a89c5a9ba4275f04053dfa6118e70
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Spec 4de3fc7b2286a4370366c92ba3ff97ab
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 29d4e6711b7d6d8a68fed679467f46e6
import  -/  iscTest-0.1.0.0@iscTest-0.1.0.0-3R7qjVtvxBgIIvFlPyswqz:Parser 945c23b99e0a55b6c77776d48f06b5f0
import  -/  iscTest-0.1.0.0@iscTest-0.1.0.0-3R7qjVtvxBgIIvFlPyswqz:Types 6b4a0540327262e92819b63e633722f2
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec.Prim 702c92f6e9ce02aa44cc940ef0f347ab
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.ParserCombinators.Parsec 210b9d7605a419b0319331228e92273a
022d8bc09b62298cfedebae3c76ef796
  $fArbitraryCell :: Test.QuickCheck.Arbitrary.Arbitrary Types.Cell
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Cell
                  Main.$fArbitraryCell_$carbitrary
                  Main.$fArbitraryCell_$cshrink -}
4c5d6cdd9a0645e24dc3b43bface0fb0
  $fArbitraryCell1 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> Types.Cell
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><L,U(U)>,
     Unfolding: (\ (r :: Test.QuickCheck.Random.QCGen)
                   (n :: GHC.Types.Int) ->
                 let {
                   ds1 :: (Test.QuickCheck.Random.QCGen, Test.QuickCheck.Random.QCGen)
                   = case r `cast`
                          (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                     case System.Random.TF.Gen.$wtfGenSplit
                            ww1
                            ww2
                            ww3
                            ww4 of ww7 { (#,#) ww8 ww9 ->
                     (ww8 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0])),
                      ww9 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))) } }
                 } in
                 let {
                   ds2 :: (Test.QuickCheck.Random.QCGen, Test.QuickCheck.Random.QCGen)
                   = case ds1 of wild { (,) r1 r2 ->
                     case r2
                            `cast`
                          (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                     case System.Random.TF.Gen.$wtfGenSplit
                            ww1
                            ww2
                            ww3
                            ww4 of ww7 { (#,#) ww8 ww9 ->
                     (ww8 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0])),
                      ww9 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))) } } }
                 } in
                 let {
                   t :: Types.Telephone
                   = case Main.$w$carbitrary
                            (case ds1 of wild { (,) r1 r2 -> r1 })
                            n of ww { (#,#) ww1 ww2 ->
                     Types.Telephone ww1 ww2 }
                 } in
                 let {
                   sf :: GHC.Base.String
                   = case n of ww { GHC.Types.I# ww1 ->
                     Test.QuickCheck.Gen.$wlistOf
                       @ GHC.Types.Char
                       Test.QuickCheck.Arbitrary.$fArbitraryChar1
                         `cast`
                       (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Char>_R))
                       (case ds2 of wild { (,) r1 r2 -> r1 })
                       ww1 }
                 } in
                 (Test.QuickCheck.Gen.oneof
                    @ Types.Cell
                    (GHC.Types.:
                       @ (Test.QuickCheck.Gen.Gen Types.Cell)
                       Main.$fArbitraryCell2
                         `cast`
                       (Sym (Test.QuickCheck.Gen.N:Gen[0] <Types.Cell>_R))
                       (GHC.Types.:
                          @ (Test.QuickCheck.Gen.Gen Types.Cell)
                          (let {
                             x :: Types.Cell = Types.T t
                           } in
                           (\ (ds :: Test.QuickCheck.Random.QCGen) (ds3 :: GHC.Types.Int) ->
                            x)
                             `cast`
                           (Sym (Test.QuickCheck.Gen.N:Gen[0] <Types.Cell>_R)))
                          (GHC.Types.:
                             @ (Test.QuickCheck.Gen.Gen Types.Cell)
                             (let {
                                x :: Types.Cell = Types.SF sf
                              } in
                              (\ (ds :: Test.QuickCheck.Random.QCGen) (ds3 :: GHC.Types.Int) ->
                               x)
                                `cast`
                              (Sym (Test.QuickCheck.Gen.N:Gen[0] <Types.Cell>_R)))
                             (GHC.Types.[] @ (Test.QuickCheck.Gen.Gen Types.Cell))))))
                   `cast`
                 (Test.QuickCheck.Gen.N:Gen[0] <Types.Cell>_R)
                   (case ds2 of wild { (,) r1 r2 -> r2 })
                   n) -}
e393c619b4b9a055b44c0253dc584abb
  $fArbitraryCell2 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> Types.Cell
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Test.QuickCheck.Random.QCGen) (ds1 :: GHC.Types.Int) ->
                 Types.Empty) -}
a3336714647f91e0370e0c1fbb103628
  $fArbitraryCell_$carbitrary :: Test.QuickCheck.Gen.Gen Types.Cell
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><L,U(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.$fArbitraryCell1
                  `cast`
                (Sym (Test.QuickCheck.Gen.N:Gen[0] <Types.Cell>_R)) -}
7915f2770fa6fef20b603ec07807bac8
  $fArbitraryCell_$cshrink :: Types.Cell -> [Types.Cell]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Types.Cell) -> GHC.Types.[] @ Types.Cell) -}
68cab16bc644d88e186d9405782fc862
  $fArbitraryTelephone ::
    Test.QuickCheck.Arbitrary.Arbitrary Types.Telephone
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Telephone
                  Main.$fArbitraryTelephone_$carbitrary
                  Main.$fArbitraryTelephone_$cshrink -}
932d8d6da9c2a1f4a68ba9ea6c5c80fa
  $fArbitraryTelephone1 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> Types.Telephone
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><L,U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 case Main.$w$carbitrary w w1 of ww { (#,#) ww1 ww2 ->
                 Types.Telephone ww1 ww2 }) -}
86b7e4ba359174b41eab81ab0f1b46c3
  $fArbitraryTelephone_$carbitrary ::
    Test.QuickCheck.Gen.Gen Types.Telephone
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><L,U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Main.$fArbitraryTelephone1
                  `cast`
                (Sym (Test.QuickCheck.Gen.N:Gen[0] <Types.Telephone>_R)) -}
45803b34a22877dddd446be264faaa67
  $fArbitraryTelephone_$cshrink ::
    Types.Telephone -> [Types.Telephone]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Types.Telephone) -> GHC.Types.[] @ Types.Telephone) -}
9b5db30b3df090b490c34ca8cd94cd1b
  $s$fEqEither ::
    GHC.Classes.Eq
      (Data.Either.Either Text.Parsec.Error.ParseError [Types.Cell])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either Text.Parsec.Error.ParseError [Types.Cell])
                  (Data.Either.$fEqEither_$c==
                     @ Text.Parsec.Error.ParseError
                     @ [Types.Cell]
                     Main.$s$fEqEither_$dEq
                     Text.Parsec.Error.$fEqParseError)
                  (Data.Either.$fEqEither_$c/=
                     @ Text.Parsec.Error.ParseError
                     @ [Types.Cell]
                     Main.$s$fEqEither_$dEq
                     Text.Parsec.Error.$fEqParseError) -}
51f9f3ff3793ecd9682de0ddb1f1c5c7
  $s$fEqEither1 ::
    GHC.Classes.Eq
      (Data.Either.Either Text.Parsec.Error.ParseError [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Text.Parsec.Error.ParseError [GHC.Types.Char])
                  (Data.Either.$fEqEither_$c==
                     @ Text.Parsec.Error.ParseError
                     @ [GHC.Types.Char]
                     GHC.Classes.$fEq[]_$s$fEq[]1
                     Text.Parsec.Error.$fEqParseError)
                  (Data.Either.$fEqEither_$c/=
                     @ Text.Parsec.Error.ParseError
                     @ [GHC.Types.Char]
                     GHC.Classes.$fEq[]_$s$fEq[]1
                     Text.Parsec.Error.$fEqParseError) -}
3ba04968f38f670f7a3da90cfb1d14e5
  $s$fEqEither2 ::
    GHC.Classes.Eq
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
                  (Data.Either.$fEqEither_$c==
                     @ Text.Parsec.Error.ParseError
                     @ Types.Telephone
                     Types.$fEqTelephone
                     Text.Parsec.Error.$fEqParseError)
                  (Data.Either.$fEqEither_$c/=
                     @ Text.Parsec.Error.ParseError
                     @ Types.Telephone
                     Types.$fEqTelephone
                     Text.Parsec.Error.$fEqParseError) -}
91295cd734ab7d3ebe6678b40d14a966
  $s$fEqEither3 ::
    GHC.Classes.Eq
      (Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char)
                  (Data.Either.$fEqEither_$c==
                     @ Text.Parsec.Error.ParseError
                     @ GHC.Types.Char
                     GHC.Classes.$fEqChar
                     Text.Parsec.Error.$fEqParseError)
                  (Data.Either.$fEqEither_$c/=
                     @ Text.Parsec.Error.ParseError
                     @ GHC.Types.Char
                     GHC.Classes.$fEqChar
                     Text.Parsec.Error.$fEqParseError) -}
3d2cd9765a816051d5e34f79ad790373
  $s$fEqEither4 ::
    GHC.Classes.Eq
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Cell)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Cell)
                  (Data.Either.$fEqEither_$c==
                     @ Text.Parsec.Error.ParseError
                     @ Types.Cell
                     Types.$fEqCell
                     Text.Parsec.Error.$fEqParseError)
                  (Data.Either.$fEqEither_$c/=
                     @ Text.Parsec.Error.ParseError
                     @ Types.Cell
                     Types.$fEqCell
                     Text.Parsec.Error.$fEqParseError) -}
9de7ed395b8c00a87ce6cc95383c3b91
  $s$fEqEither_$dEq :: GHC.Classes.Eq [Types.Cell]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fEqEither_$s$fEq[] -}
4d0bcc34a2c1810d96467b3acefd6c99
  $s$fEqEither_$s$fEq[] :: GHC.Classes.Eq [Types.Cell]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.Cell]
                  (GHC.Classes.$fEq[]_$c== @ Types.Cell Types.$fEqCell)
                  Main.$s$fEqEither_$s$fEq[]_$c/= -}
8b7045e1d6f662db322b0003e2c4703e
  $s$fEqEither_$s$fEq[]_$c/= ::
    [Types.Cell] -> [Types.Cell] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Types.Cell]) (y :: [Types.Cell]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c== @ Types.Cell Types.$fEqCell x y)) -}
ea42598fd24120c9dc62318f22b6dfd1
  $s$fEq[] :: GHC.Classes.Eq [Types.Telephone]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.Telephone]
                  (GHC.Classes.$fEq[]_$c== @ Types.Telephone Types.$fEqTelephone)
                  Main.$s$fEq[]_$s$fEq[]_$c/= -}
9ed52010c0b02414b551778dd4532420
  $s$fEq[]_$s$fEq[]_$c/= ::
    [Types.Telephone] -> [Types.Telephone] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Types.Telephone]) (y :: [Types.Telephone]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ Types.Telephone
                      Types.$fEqTelephone
                      x
                      y)) -}
55724b5d939396fcb3cc14be4c7b58fd
  $s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either Text.Parsec.Error.ParseError [Types.Cell])
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either Text.Parsec.Error.ParseError [Types.Cell])
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ Text.Parsec.Error.ParseError
                     @ [Types.Cell]
                     Main.$s$fShowEither_$dShow
                     Text.Parsec.Error.$fShowParseError)
                  (Data.Either.$fShowEither_$cshow
                     @ Text.Parsec.Error.ParseError
                     @ [Types.Cell]
                     Main.$s$fShowEither_$dShow
                     Text.Parsec.Error.$fShowParseError)
                  Main.$s$fShowEither1 -}
f789092b3d0e13dd717ef0664147d07e
  $s$fShowEither1 ::
    [Data.Either.Either Text.Parsec.Error.ParseError [Types.Cell]]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (eta :: [Data.Either.Either
                              Text.Parsec.Error.ParseError [Types.Cell]])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either Text.Parsec.Error.ParseError [Types.Cell])
                   Main.$s$fShowEither2
                   eta
                   eta1) -}
1c06e97c617b0f0d95d71dc551a66dc4
  $s$fShowEither2 ::
    Data.Either.Either Text.Parsec.Error.ParseError [Types.Cell]
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w3 :: Data.Either.Either
                            Text.Parsec.Error.ParseError [Types.Cell]) ->
                 Data.Either.$w$cshowsPrec
                   @ Text.Parsec.Error.ParseError
                   @ [Types.Cell]
                   Main.$s$fShowEither_$s$fShow[]
                   Text.Parsec.Error.$fShowParseError
                   0#
                   w3) -}
d5e8b1cf46d182927deff637cf1ea00f
  $s$fShowEither3 ::
    GHC.Show.Show
      (Data.Either.Either Text.Parsec.Error.ParseError [GHC.Types.Char])
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Text.Parsec.Error.ParseError [GHC.Types.Char])
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ Text.Parsec.Error.ParseError
                     @ [GHC.Types.Char]
                     GHC.Show.$fShow[]_$s$fShow[]1
                     Text.Parsec.Error.$fShowParseError)
                  (Data.Either.$fShowEither_$cshow
                     @ Text.Parsec.Error.ParseError
                     @ [GHC.Types.Char]
                     GHC.Show.$fShow[]_$s$fShow[]1
                     Text.Parsec.Error.$fShowParseError)
                  Main.$s$fShowEither_$s$fShowEither_$cshowList -}
495528280ca0ee999da783b46a033f8c
  $s$fShowEither4 ::
    GHC.Show.Show
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ Text.Parsec.Error.ParseError
                     @ Types.Telephone
                     Types.$fShowTelephone
                     Text.Parsec.Error.$fShowParseError)
                  (Data.Either.$fShowEither_$cshow
                     @ Text.Parsec.Error.ParseError
                     @ Types.Telephone
                     Types.$fShowTelephone
                     Text.Parsec.Error.$fShowParseError)
                  Main.$s$fShowEither_$s$fShowEither_$cshowList1 -}
0f06aa9e0a16898ba950a701f72d3acd
  $s$fShowEither5 ::
    GHC.Show.Show
      (Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char)
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ Text.Parsec.Error.ParseError
                     @ GHC.Types.Char
                     GHC.Show.$fShowChar
                     Text.Parsec.Error.$fShowParseError)
                  (Data.Either.$fShowEither_$cshow
                     @ Text.Parsec.Error.ParseError
                     @ GHC.Types.Char
                     GHC.Show.$fShowChar
                     Text.Parsec.Error.$fShowParseError)
                  Main.$s$fShowEither_$s$fShowEither_$cshowList2 -}
eb9928c31693f2726d5a6a667a8a8b89
  $s$fShowEither6 ::
    GHC.Show.Show
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Cell)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Cell)
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ Text.Parsec.Error.ParseError
                     @ Types.Cell
                     Types.$fShowCell
                     Text.Parsec.Error.$fShowParseError)
                  (Data.Either.$fShowEither_$cshow
                     @ Text.Parsec.Error.ParseError
                     @ Types.Cell
                     Types.$fShowCell
                     Text.Parsec.Error.$fShowParseError)
                  Main.$s$fShowEither_$s$fShowEither_$cshowList3 -}
2987b51ba848541ae759d8eed43e991b
  $s$fShowEither_$dShow :: GHC.Show.Show [Types.Cell]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fShowEither_$s$fShow[] -}
979943c0b6273d27c1ce7013683490ba
  $s$fShowEither_$s$fShowEither_$cshowList ::
    [Data.Either.Either Text.Parsec.Error.ParseError [GHC.Types.Char]]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [Data.Either.Either
                              Text.Parsec.Error.ParseError [GHC.Types.Char]])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either
                        Text.Parsec.Error.ParseError [GHC.Types.Char])
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ Text.Parsec.Error.ParseError
                      @ [GHC.Types.Char]
                      GHC.Show.$fShow[]_$s$fShow[]1
                      Text.Parsec.Error.$fShowParseError
                      Data.Either.$fShowEither1)
                   eta
                   eta1) -}
82d51dba0b94487c3a6afebfca9674bb
  $s$fShowEither_$s$fShowEither_$cshowList1 ::
    [Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [Data.Either.Either
                              Text.Parsec.Error.ParseError Types.Telephone])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ Text.Parsec.Error.ParseError
                      @ Types.Telephone
                      Types.$fShowTelephone
                      Text.Parsec.Error.$fShowParseError
                      Data.Either.$fShowEither1)
                   eta
                   eta1) -}
6217aea39e72277315c5a485bac2f259
  $s$fShowEither_$s$fShowEither_$cshowList2 ::
    [Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [Data.Either.Either
                              Text.Parsec.Error.ParseError GHC.Types.Char])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char)
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ Text.Parsec.Error.ParseError
                      @ GHC.Types.Char
                      GHC.Show.$fShowChar
                      Text.Parsec.Error.$fShowParseError
                      Data.Either.$fShowEither1)
                   eta
                   eta1) -}
652b28eb79fb0ab02c13b38598dc8037
  $s$fShowEither_$s$fShowEither_$cshowList3 ::
    [Data.Either.Either Text.Parsec.Error.ParseError Types.Cell]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [Data.Either.Either
                              Text.Parsec.Error.ParseError Types.Cell])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Cell)
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ Text.Parsec.Error.ParseError
                      @ Types.Cell
                      Types.$fShowCell
                      Text.Parsec.Error.$fShowParseError
                      Data.Either.$fShowEither1)
                   eta
                   eta1) -}
2ee0712ae96f9a4a8a487f834f9f7303
  $s$fShowEither_$s$fShow[] :: GHC.Show.Show [Types.Cell]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.Cell]
                  Main.$s$fShowEither_$s$fShow[]_$cshowsPrec
                  Main.$s$fShowEither_$s$fShow[]_$cshow
                  Main.$s$fShowEither_$s$fShow[]_$cshowList -}
d5510ba6800ae8ee55e86898f11ce511
  $s$fShowEither_$s$fShow[]_$cshow :: [Types.Cell] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Types.Cell]) ->
                 Types.$fShowCell_$cshowList x (GHC.Types.[] @ GHC.Types.Char)) -}
b897b1006d7f455e1cbd42acca72f942
  $s$fShowEither_$s$fShow[]_$cshowList ::
    [[Types.Cell]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[Types.Cell]]) (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [Types.Cell]
                   Types.$fShowCell_$cshowList
                   eta
                   eta1) -}
89750ef0070f1ef5a1856886b93c781a
  $s$fShowEither_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [Types.Cell] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [Types.Cell])
                   (eta1 :: GHC.Base.String) ->
                 Types.$fShowCell_$cshowList eta eta1) -}
0da056ab0d4e17925ade0a4221d3abf5
  $s$fShow[] :: GHC.Show.Show [Types.Telephone]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.Telephone]
                  Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
                  Main.$s$fShow[]_$s$fShow[]_$cshow
                  Main.$s$fShow[]_$s$fShow[]_$cshowList -}
8ca1f97c64c4dc052ac59c0231864641
  $s$fShow[]_$s$fShow[]_$cshow ::
    [Types.Telephone] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Types.Telephone]) ->
                 Types.$fShowTelephone_$cshowList
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1bd66177abdec7ecbfa18192d833d2fc
  $s$fShow[]_$s$fShow[]_$cshowList ::
    [[Types.Telephone]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[Types.Telephone]]) (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [Types.Telephone]
                   Types.$fShowTelephone_$cshowList
                   eta
                   eta1) -}
ca3e9e391e105391f4d1f042b65a35d6
  $s$fShow[]_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [Types.Telephone] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [Types.Telephone])
                   (eta1 :: GHC.Base.String) ->
                 Types.$fShowTelephone_$cshowList eta eta1) -}
e3ddb9cbd45afd8fe757627af7a8d2b3
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  (Main.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok)
                  (Main.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
984572e3541c637553bf20d89dace2dd
  $s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream ::
    GHC.Base.Monad Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ tok -> Data.Functor.Identity.$fMonadIdentity) -}
79280bd956ba70f460b23f972c357bee
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Nothing @ (tok, [tok]))
                   : t ts
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Just @ (tok, [tok]) (t, ts)) }) -}
d1154796b7868b2b93d392070d397118
  $stypeOf2 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           Main.$stypeOf3
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   Text.Parsec.Error.$tcParseError
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
a4529d27fcf55249f0fb03814763b047
  $stypeOf3 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   14480798204154794037##
                   17441373333559671539##) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
5f2e861f5e94f9af0f8e166cb48b2e42
  $w$carbitrary ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> (# [GHC.Types.Int], [GHC.Types.Int] #)
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (w :: Test.QuickCheck.Random.QCGen)
                   (w1 :: GHC.Types.Int) ->
                 let {
                   ds1 :: (Test.QuickCheck.Random.QCGen, Test.QuickCheck.Random.QCGen)
                   = case w `cast`
                          (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                     case System.Random.TF.Gen.$wtfGenSplit
                            ww1
                            ww2
                            ww3
                            ww4 of ww7 { (#,#) ww8 ww9 ->
                     (ww8 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0])),
                      ww9 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))) } }
                 } in
                 (# case w1 of ww { GHC.Types.I# ww1 ->
                    Test.QuickCheck.Gen.$wlistOf
                      @ GHC.Types.Int
                      Test.QuickCheck.Arbitrary.$fArbitraryInt3
                        `cast`
                      (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Int>_R))
                      (case ds1 of wild { (,) r1 r2 -> r1 })
                      ww1 },
                    case w1 of ww { GHC.Types.I# ww1 ->
                    Test.QuickCheck.Gen.$wlistOf
                      @ GHC.Types.Int
                      Test.QuickCheck.Arbitrary.$fArbitraryInt3
                        `cast`
                      (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Int>_R))
                      (case ds1 of wild { (,) r1 r2 ->
                       case r2
                              `cast`
                            (Test.QuickCheck.Random.N:QCGen[0]) of ww2 { System.Random.TF.Gen.TFGen ww3 ww4 ww5 ww6 ww7 ww8 ->
                       case System.Random.TF.Gen.$wtfGenSplit
                              ww3
                              ww4
                              ww5
                              ww6 of ww9 { (#,#) ww10 ww11 ->
                       ww10 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0])) } } })
                      ww1 } #)) -}
7edd09590b6282c7b6583261d537ce39
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
df3ebf0b749d4767718c547733ddb542
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Core.Options.defaultConfig
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
da51cf32bd4d046c44f9dc18ad6b04f2
  main10 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main365
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main11) -}
845f7ed20f747c43816be8be66e037b5
  main100 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 66#) -}
fb1c3076cd690f86ff257227c2df554c
  main101 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main102
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
2829eb0a382b73b609c62c2767884981
  main102 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main103) -}
0465f9543f4ddb3e47aabe60bf1f5bc1
  main103 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main104) -}
2539f8f97235273de6d23c431b11be22
  main104 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main105) -}
e56aef81809c5e792ef3eb8d65f2ea05
  main105 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main106) -}
491eae13f5d898a5f29e6524ed6107c2
  main106 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main107
                   GHC.Stack.Types.EmptyCallStack) -}
cb525f58b010684f67165cd5e9bbaffc
  main107 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main109
                   Main.main50
                   Main.main109
                   Main.main108) -}
0436453fb0f8eea0ee34f92fc985a1a2
  main108 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 50#) -}
bb5aaf4998b710d23e2cb5d279f75496
  main109 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 65#) -}
24720e7d7364171cd75d2069b3a3d698
  main11 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main344
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main12) -}
c3b2bd0a79d124edfc08dd7363b3355c
  main110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main55
                   Main.main111) -}
df4b7f7d5675e2c706d89220ca18a883
  main111 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "arseLine: parse a line with 6 cells"#) -}
11586811826a8cf04df15b02b6eea616
  main112 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main113
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
86e6d2606fb2355af2fcfb09588b9263
  main113 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main114) -}
87b96e512603a1e10cb5522285da4dd3
  main114 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main132
                   Main.main123
                   GHC.Types.False
                   Main.main115
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
57ca8543a04c261fa10c5aa129f1edb2
  main115 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main116) -}
4cdb796d5965dfefbbe720513ba25401
  main116 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main117
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main29
                   Main.main28) -}
6a8f45e3140ca996bb85a7f86297f510
  main117 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main118
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
7a366eaf5348f308a5af9f9b752fedc8
  main118 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main119) -}
50068a6a02f000f37b1a249f51d8d43e
  main119 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main120) -}
c04ab809b288325239f295a073444972
  main12 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main309
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main13) -}
d7bd92e0388ec659e2b0b4f4eacfa746
  main120 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main121
                   GHC.Stack.Types.EmptyCallStack) -}
d65b12c4fe5324c96bc3934c19b6d2d2
  main121 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main122
                   Main.main36
                   Main.main122
                   Main.main35) -}
16798e9909b714cc7ea8a2ff749b28ef
  main122 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 64#) -}
83b61ea893e9d396cc818042e8d8eac2
  main123 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main124
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
dcc3e291b48aa39b7ea1086c03629a38
  main124 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main125) -}
e90dc6ebc008b44a4a004fe5b5cedade
  main125 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main126) -}
ee2acd524b8620fca9022b576f6e6826
  main126 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main127) -}
8eb74ae2a83442ac810224b5ff12677a
  main127 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main128) -}
c5f214343fdf783fd5ac3540253929b9
  main128 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main129
                   GHC.Stack.Types.EmptyCallStack) -}
22ceeadebb241b4a40e595755281afc1
  main129 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main131
                   Main.main50
                   Main.main131
                   Main.main130) -}
59d7009c2ada72871c295e8c343343e1
  main13 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main274
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main14) -}
90b89372c58732b2e332db6291ea4dd1
  main130 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39#) -}
4defaa8db33ded68a594548316cc1da3
  main131 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 62#) -}
3d0a06d2ae81c05b9feaa115ba1c62d2
  main132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main134
                   Main.main133) -}
3dfbd64ad93e2bf79aa478da2ada3e42
  main133 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "mpty: error if not empty"#) -}
a71d76079cfeefad9d5902133a30be12
  main134 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'e'#) -}
9d5db70ec039c3168f3094e244322f15
  main135 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main136
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
941160393b78b8201cf33c4acd28f6ec
  main136 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main137) -}
35a0856d2499dc5d5202a5f8e9ca0d73
  main137 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main158
                   Main.main149
                   GHC.Types.False
                   Main.main138
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
929ef6dd2ff2aeafe8fbea04cccafb99
  main138 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main139) -}
d21bb9dfba89c2dbb9fc3312133a33d6
  main139 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main142
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main141
                   Main.main140
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either Text.Parsec.Error.ParseError Types.Cell>_R)) -}
e2515b2ae87ca7e0b882bc3349fd14aa
  main14 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main252
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main15) -}
7a63e85bb4846782bd2821b3c69978c3
  main140 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Cell)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Types.Cell
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.empty1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Types.Cell>_R))
                   GHC.Tuple.()
                   Main.main84
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8daceb0f48c1ce0309f7030e4cba3198
  main141 ::
    Data.Either.Either Text.Parsec.Error.ParseError Types.Cell
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ Types.Cell
                   Types.Empty) -}
c63c7de1d2ba9295116b36b15120c6a1
  main142 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Cell
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Cell
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Cell)
                   Main.main143
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither4
                   Main.$s$fShowEither6) -}
d478f2906a31102f385e6fd85e3e07a2
  main143 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main144) -}
e13b9932cfb75ada84a01c9bc6e95e26
  main144 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main145) -}
5b2a5cdfa5e753b5b473e59fb183343d
  main145 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main146
                   GHC.Stack.Types.EmptyCallStack) -}
3489113e8523902cbda466fbad3d3388
  main146 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main148
                   Main.main36
                   Main.main148
                   Main.main147) -}
545c45971a56b338d89a81cb4672f714
  main147 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 58#) -}
2811c67ac7c4c29099de2dcff2bc420a
  main148 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 61#) -}
93ab768ca3898de28144f338deaddb89
  main149 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main150
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
337c017ac1385a9b5578012952415b19
  main15 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main230
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main16) -}
d6c42d3bf160a060d374ff9dc53b3764
  main150 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main151) -}
a226a3144b31659ce1d16e1334b2b65b
  main151 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main152) -}
243cd556627672488126b2fcbb6505e1
  main152 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main153) -}
574be4cf8cc778176473e930a0ce5449
  main153 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main154) -}
0113491f3c6b4e09ecd271839c92a3c5
  main154 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main155
                   GHC.Stack.Types.EmptyCallStack) -}
68d1fb5e6c9d99a2f54a7a8fe344c8c7
  main155 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main157
                   Main.main50
                   Main.main157
                   Main.main156) -}
0b4a70d823c44eeb98128aca58e90810
  main156 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42#) -}
e6b1630d9a39ead67b9e16a37678fa50
  main157 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 60#) -}
d443d45acdd7561758ab40766fc9929b
  main158 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main134
                   Main.main159) -}
d30aa02fd6b8443b9645670e8729cd36
  main159 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "mpty: parse an `empty` cell"#) -}
b5a36f5fa43f751606fb91c84ec71b10
  main16 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main209
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main17) -}
a7fe3fd28c8dbfe6623ab142b7f96166
  main160 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main161
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
74a5006d49090f9a9c34e845f2e5442d
  main161 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main162) -}
4f288efd7cca621813931edec80940c4
  main162 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main180
                   Main.main171
                   GHC.Types.False
                   Main.main163
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
08c4c4b7848a678ec7ff41d7e28643ea
  main163 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main164) -}
29c7b58f26fbc8368fb2c3f3f478f8f4
  main164 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main165
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main29
                   Main.main28) -}
55d9a23b996c32437980730eb5868f51
  main165 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main166
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
3919104870694ba1baba5dc0b5da88c7
  main166 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main167) -}
ce3e2a0733d0ffa520ad03af93edf974
  main167 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main168) -}
a55f7433505774a0328af92345a47769
  main168 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main169
                   GHC.Stack.Types.EmptyCallStack) -}
c54a36e8edf0255c51f5bf5197b30b34
  main169 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main170
                   Main.main36
                   Main.main170
                   Main.main35) -}
e1c4b0ba0813f37a41e84ec96de067cc
  main17 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main183
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main18) -}
06ae76aede16b4c91c38fe2ef16e5e38
  main170 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 59#) -}
e7dc3c95ed3751cbfefdba8db3b082c8
  main171 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main172
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
4b6d34d04fe6eef6b5fd7194eef48b1c
  main172 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main173) -}
bb6c21a8dfce8e98de8f357fc4face9d
  main173 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main174) -}
8a9cc956d268891fcc7a2424e718eb68
  main174 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main175) -}
9e4cf7206c1e583ea5990defc0704889
  main175 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main176) -}
af4c59829a27be6f25bf8bd3c5a24ba8
  main176 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main177
                   GHC.Stack.Types.EmptyCallStack) -}
3860396a04d08ee60bc72f9639f0df18
  main177 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main179
                   Main.main50
                   Main.main179
                   Main.main178) -}
68ad4f2c9c153ebfb06c2875b217c925
  main178 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 38#) -}
a4045b4163ad3d10800b5ab5fb0c5af6
  main179 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 57#) -}
9290d6c94e50edb332b6717a8395bf40
  main18 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main160
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main19) -}
269b0664cd963d9007e775fe3aa44676
  main180 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main182
                   Main.main181) -}
5de9db8eae288fb76e90ebf0e0be26cb
  main181 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ep: error if not a coma"#) -}
81846c9ea425030c174b6506521986e4
  main182 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 's'#) -}
4444198dc59546251f170045747fbf89
  main183 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main184
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
fe8e63b06f610def26452cf06294f6a1
  main184 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main185) -}
4ca460ad95e705850cc72a369d661c77
  main185 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main207
                   Main.main199
                   GHC.Types.False
                   Main.main186
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
27df26e3de10666db0a5edfe38865e5d
  main186 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main187) -}
91c2ca863b64ad0e724b01d6fb3ab6b2
  main187 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main192
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main190
                   Main.main188
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either
                           Text.Parsec.Error.ParseError GHC.Types.Char>_R)) -}
dd118e1a45af2ceb20efb21cd1db9063
  main188 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.sep
                   GHC.Tuple.()
                   Main.main84
                   Main.main189) -}
21c348aba76af1790ff4355b43ecb32a
  main189 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ","#) -}
82700d109e1fea228418b93890139081
  main19 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main135
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main20) -}
b5a044fcf5a9726571ac8a63eaa61b2e
  main190 ::
    Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ GHC.Types.Char
                   Main.main191) -}
cae2404040c3d70bbefe7b1a955da58a
  main191 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# ','#) -}
45c1ca9e695dc2e9cdd0be40604f5628
  main192 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char
    -> Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError GHC.Types.Char)
                   Main.main193
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither3
                   Main.$s$fShowEither5) -}
2d5f2f7cc50c43e818ea1971cd742d0e
  main193 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main194) -}
ab72732c29add7fc99e1f684d8734c13
  main194 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main195) -}
830eb01560a105add27743ee4d2f96cb
  main195 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main196
                   GHC.Stack.Types.EmptyCallStack) -}
dce6494aa4840b6e97afe583187ebb41
  main196 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main198
                   Main.main36
                   Main.main198
                   Main.main197) -}
b6c74f682c64e1d51d8a406d46328581
  main197 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 55#) -}
87c5d39d1029706cb9eff67036f6cd4b
  main198 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 56#) -}
58efcfcb9978cb96b93516fe8929068a
  main199 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main200
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
d9463f1848880f4b2bc692e4cb0054a1
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main3 #)) -}
d474aa78a7d449bb2d284a6ab1e6809a
  main20 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main112
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main21) -}
b7ad7f50711dab0bad37ad4d326de2c4
  main200 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main201) -}
18e36a26e403919ffa0d53d51976bddd
  main201 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main202) -}
df2defdae07a2656af1e80119eda4903
  main202 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main203) -}
1b677326dee4c4bf6968b3e61b38dad3
  main203 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main204) -}
1e9d7f4f45148c3b54128dd22808cd65
  main204 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main205
                   GHC.Stack.Types.EmptyCallStack) -}
76f48376e1cc203a87e8c57067df1d41
  main205 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main197
                   Main.main50
                   Main.main197
                   Main.main206) -}
b71627f79525d03cf430053edf037f80
  main206 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 31#) -}
b18f0f6b758fccae1402ab276bca2910
  main207 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main182
                   Main.main208) -}
9741ff8989f9cbe802895ec85b396738
  main208 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ep: parse a coma"#) -}
2ff3d29bf1a5f32cbe73714e4d839b90
  main209 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main210
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
6fc9f80e43ed1e47479c40a3d74ab33a
  main21 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main77
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main22) -}
12cd8d34a072b2bfcc3ecf7a9ed4d4f7
  main210 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main211) -}
7eeb3c66687f9cb358d4b061454e60c1
  main211 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main228
                   Main.main220
                   GHC.Types.False
                   Main.main212
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
de1de502b232df068eb66a323da8760a
  main212 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main213) -}
12fb882c2dccb4a91de042286b23d8f9
  main213 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main214
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main29
                   Main.main28) -}
136385a71e09b22e99930b85fd19978a
  main214 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main215
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
ceff7d18894da9474b8748cc5707f493
  main215 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main216) -}
de8c96fdb66fdfb9519e39d1ead0c9d5
  main216 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main217) -}
504e65dcaf35b92b914e6154760fbbc2
  main217 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main218
                   GHC.Stack.Types.EmptyCallStack) -}
7a45ae773af8c1b9841c6e3b0fe42370
  main218 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main219
                   Main.main36
                   Main.main219
                   Main.main35) -}
df6a375b7448f9aa728ff0ae3f5002be
  main219 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54#) -}
9e4cc27cf6e5ef6f07423bb39e1d866a
  main22 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main56
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main23
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
90f09f08d5815983fd4443088ef4e7d5
  main220 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main221
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
8a8da649f0c69dd42f0b3e074ea49402
  main221 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main222) -}
0b60b65a29673ba22c9b4ccd1cc0ded7
  main222 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main223) -}
b60574a7b4ee1f84970c1f1a84b1109f
  main223 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main224) -}
39e4330d0fcdf3b3f0c67f07e2b70e86
  main224 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main225) -}
ea8811c151f11a2c43d077c35e669b42
  main225 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main226
                   GHC.Stack.Types.EmptyCallStack) -}
91d0d49492f8bd57705763844a62b9af
  main226 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main35
                   Main.main50
                   Main.main35
                   Main.main227) -}
b94a3eec234d670228aff871c6b2390d
  main227 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 44#) -}
046aff045d25a0a609c7d424964cdf67
  main228 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main55
                   Main.main229) -}
06dd7745972c39fd23c9b8fed6190b03
  main229 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "arseSF: parse an empty string"#) -}
2f1c62cb3c38159efee3c35f26438377
  main23 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main24
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
a63891db78fb7cfd9d81d0cb027247f8
  main230 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main231
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
85103f09514f18b903bdfa6d100ca03c
  main231 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main232) -}
b2240eab183ffbd03ced94bafefc1f22
  main232 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main250
                   Main.main243
                   GHC.Types.False
                   Main.main233
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
812fa835612ed700ba396c06c5dba2ee
  main233 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main234) -}
74f07e937058dbdcaa1d60d4e478f58c
  main234 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main238
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main237
                   Main.main235
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either
                           Text.Parsec.Error.ParseError GHC.Base.String>_R)) -}
3e2e7f667e4171f277ed15c601ed6524
  main235 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Base.String
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.parseSF1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   GHC.Tuple.()
                   Main.main84
                   Main.main236) -}
8721b0f874dbbaa8ba2c48f32289a6bd
  main236 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "asda"#) -}
39254a6141492c6bc6672b339b73db48
  main237 ::
    Data.Either.Either Text.Parsec.Error.ParseError [GHC.Types.Char]
  {- Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ [GHC.Types.Char]
                   Main.main236) -}
62eb299ccdcfb20ab88620c3de1839d9
  main238 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String)
                   Main.main239
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither1
                   Main.$s$fShowEither3) -}
6776e352cd6eae0db70d51e6af595b50
  main239 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main240) -}
141bba71a36c4020d915720b61fdcb3e
  main24 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main25) -}
8988e559f2019598ce6f8d45c1887aba
  main240 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main241) -}
9f71b1ae5e0f4a90afd05dffe0620200
  main241 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main242
                   GHC.Stack.Types.EmptyCallStack) -}
6e88794716eaddbf04933c4978d5202c
  main242 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main49
                   Main.main36
                   Main.main49
                   Main.main109) -}
f541abd29c9be6db24e25835d4644fa8
  main243 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main244
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
3ce096cff27ff3543ce3129d23fb3680
  main244 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main245) -}
04e7950e5ef4ad39fb6c701f1b4ae309
  main245 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main246) -}
3ff209b34f833e3088cde5d983433be0
  main246 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main247) -}
0a8b4d080866105e51f2aed805df4bc6
  main247 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main248) -}
0457984a59b008bc3c3695e85ee2ab4c
  main248 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main249
                   GHC.Stack.Types.EmptyCallStack) -}
fdb09f1aa8d5ff0b3b8d158d2b18f1ee
  main249 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main108
                   Main.main50
                   Main.main108
                   Main.main227) -}
b9eb26e1d9276e2042ded5ad36544119
  main25 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main53
                   Main.main42
                   GHC.Types.False
                   Main.main26
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
591eab952fe9053651a837c517aed884
  main250 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main55
                   Main.main251) -}
24cb9829307d7b4bdf48213dd4d40908
  main251 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "arseSF: parse string not null"#) -}
582e936f0c32979a14e1454ad848ec6a
  main252 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main253
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
0aba83d8c95514cfea38e488c19e7da1
  main253 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main254) -}
88a7bfa04cdaa483a81ebd65d3f1cd9c
  main254 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main271
                   Main.main263
                   GHC.Types.False
                   Main.main255
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
6443037ab16bdf91130dd36eae2984e7
  main255 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main256) -}
397eada3a9060b49843a865d948b23ba
  main256 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main257
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main29
                   Main.main28) -}
8648092f6b561aa6f1cd03dd1fae7a2c
  main257 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main258
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
dcbad1aa43adcc10d6c12041ab629f3f
  main258 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main259) -}
f7c2a9a64f645f5e0755e3c830097503
  main259 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main260) -}
161e65043dba3778dc324dee6e15214c
  main26 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main27) -}
e8f424761f8527907b287bc49c0a717d
  main260 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main261
                   GHC.Stack.Types.EmptyCallStack) -}
96e5a73625363edff8177ff51ecee0b8
  main261 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main262
                   Main.main36
                   Main.main262
                   Main.main35) -}
a68c001240bf5f32c7f76434f167c480
  main262 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 49#) -}
7aef2a673d52743735151ed69ee97e85
  main263 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main264
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
35f547b08951c637a685d83b1f1e36c1
  main264 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main265) -}
f88dc1b2eb639d62cdc17a7577aaeaad
  main265 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main266) -}
c8f0546e5fba71ed7c32e96825363918
  main266 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main267) -}
d3f5d4930f73beda1a866ab4a9fb4540
  main267 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main268) -}
e619024b1527165ef1b23de3d8d2b9b0
  main268 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main269
                   GHC.Stack.Types.EmptyCallStack) -}
f06a53b5838e0bfbbd765f45e4eb2b18
  main269 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main270
                   Main.main50
                   Main.main270
                   Main.main49) -}
1148881d90dea75f3fea69db7b22fee6
  main27 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main30
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main29
                   Main.main28) -}
95bcefb8cb316d0fe6adc12f40e119d2
  main270 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 47#) -}
c28f346fb12418883cd924d0ad88ca5a
  main271 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main273
                   Main.main272) -}
2e2f264bf2667b1e3c20425fc8d436d8
  main272 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "lunkyTel: ParseError if not a number"#) -}
f13d3d4c1ae2a29548e74c73f540ba8b
  main273 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'c'#) -}
9078b99f88c2c738ffeba23194eb2828
  main274 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main275
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
d53af8f59ea45f841003463492adb196
  main275 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main276) -}
b69f7508c83a44bc2927b2d60dc37365
  main276 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main307
                   Main.main298
                   GHC.Types.False
                   Main.main277
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
7c3cea779905c574d56e4778e742072d
  main277 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main278) -}
ce2e395f1229778226058deba2cab43b
  main278 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main291
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main281
                   Main.main279
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either
                           Text.Parsec.Error.ParseError Types.Telephone>_R)) -}
010e6584a8f7f9855745b2aa4fc1837a
  main279 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Types.Telephone
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.clunkyTel1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Types.Telephone>_R))
                   GHC.Tuple.()
                   Main.main84
                   Main.main280) -}
3f51baf3ffcb5be19c4b308ad41c04e3
  main28 :: GHC.Base.String
  {- Unfolding: (case Main.$stypeOf2 of ww { Data.Typeable.Internal.TypeRep ww1 ww2 ww3 ww4 ww5 ->
                 case ww3 of ww6 { GHC.Types.TyCon ww7 ww8 ww9 ww10 ->
                 Data.Typeable.Internal.$w$cshowsPrec
                   GHC.Show.shows22
                   ww7
                   ww8
                   ww10
                   ww4
                   ww5
                   (GHC.Types.[] @ GHC.Types.Char) } }) -}
3b57dd9b1f0b38cc49eeedcd3ae72cc4
  main280 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "8895"#) -}
826cc97781028d6f07f372e7a86ad5bd
  main281 ::
    Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ Types.Telephone
                   Main.main282) -}
529941a7d6c5b325a6852671ad700956
  main282 :: Types.Telephone
  {- HasNoCafRefs,
     Unfolding: (Types.Telephone Main.main289 Main.main283) -}
1f4b7692770596c1857edacc1ee959ff
  main283 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main288
                   Main.main284) -}
c5a8d960a8e0e2f70b0f0d6fde903cfa
  main284 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main288
                   Main.main285) -}
1290d13fd48d5f4b7195c1e0e285a7b2
  main285 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main50
                   Main.main286) -}
fa0e755e6cacc9fb2e59462288ac489a
  main286 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main287
                   (GHC.Types.[] @ GHC.Types.Int)) -}
2bc981dc69aa2d999b1aa962b8f222a1
  main287 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
91f884542e617429000b5614d76d8400
  main288 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8#) -}
8b8f17a8a5721e7e6e58704fc49a7b63
  main289 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main290
                   (GHC.Types.[] @ GHC.Types.Int)) -}
55695fead548390c47e29675f6d240ef
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ParseError"#) -}
c35cea85636f6d75e62506369e161173
  main290 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# -1#) -}
fbcea3cd99ec554c7def406a98f03356
  main291 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
                   Main.main292
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither2
                   Main.$s$fShowEither4) -}
60dd1bc11e648edb8e3c939c632812ee
  main292 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main293) -}
4f9a640bdfd8157c2455e7a48306c797
  main293 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main294) -}
9035bdffd3a838a16f7d1b5bbd3ff584
  main294 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main295
                   GHC.Stack.Types.EmptyCallStack) -}
ea09999d06fde0310c8e300257e5d68c
  main295 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main297
                   Main.main36
                   Main.main297
                   Main.main296) -}
59f09903092f31b58faae642612e4423
  main296 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 87#) -}
9016c529f4f86c6a13ba7c083c79a8ca
  main297 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 46#) -}
53140dc193b9ed9926473c93d9c32f33
  main298 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main299
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
1112d2b04f0a3b72189481fdd510f8ed
  main299 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main300) -}
122c23e1429722ae12caa84a0c9312c5
  main3 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
573ad94c2f594993d58c273756bda17d
  main30 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main31
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
559b25ab64f9b4665746893b8ef8c7d0
  main300 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main301) -}
f5d55124abacacbc7e14106842ba3c9d
  main301 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main302) -}
5222568c77e2c6bfeec5a0c2cea4f39f
  main302 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main303) -}
ddbf838f5046517ea9a3c910f87e6bf0
  main303 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main304
                   GHC.Stack.Types.EmptyCallStack) -}
d3d2eb8fae36c44599539d9d3e3de3a2
  main304 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main306
                   Main.main50
                   Main.main306
                   Main.main305) -}
161c3f33b846cd62e35516835b2b39ce
  main305 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 83#) -}
4fb49b59d1f8d5fdfccaa86291689939
  main306 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 45#) -}
ae6832bf38c0c4cd4e75bca4e7921f45
  main307 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main273
                   Main.main308) -}
89f42e6cdbf93c1aee7a1bc363f6e5a9
  main308 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "lunkyTel: return an `indicatif` equals to -1 if the length is not 11"#) -}
301655539d620f8e22418843ffa9aa78
  main309 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main310
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
430f2d315fdec01ea49890df73a9aa71
  main31 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main32) -}
9d17dca19da557e0fb4327391cce5c61
  main310 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main311) -}
4b5b5953723f395d76fb7cddef981be7
  main311 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main342
                   Main.main333
                   GHC.Types.False
                   Main.main312
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
2354461a9466ff29f794241bf6197c31
  main312 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main313) -}
2d47c3457397c5185f62605c1b3ab9d2
  main313 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main327
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main316
                   Main.main314
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either
                           Text.Parsec.Error.ParseError Types.Telephone>_R)) -}
24a30415509b775ab81ebc441a8b4b06
  main314 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Types.Telephone
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.clunkyTel1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Types.Telephone>_R))
                   GHC.Tuple.()
                   Main.main84
                   Main.main315) -}
b27ac6c501ea81d7567c5bbbf244ff1f
  main315 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "33695598895"#) -}
dc54296e7907f4c19eb66b64070ab2a6
  main316 ::
    Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ Types.Telephone
                   Main.main317) -}
d9454e590fef1e1e33f05d4ea805b2d2
  main317 :: Types.Telephone
  {- HasNoCafRefs,
     Unfolding: (Types.Telephone Main.main324 Main.main318) -}
87dc3413bd622ff0b51882b21200423a
  main318 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main323
                   Main.main319) -}
6e02f44c1a29375f5420c244a7cee3cb
  main319 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main50
                   Main.main320) -}
64f47635b1ffb734288c2c325198d03e
  main32 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main33) -}
64c0856d70ce96e998fada2985efba9a
  main320 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main287
                   Main.main321) -}
ede67adeaaa8d39a7ecb7eedc426f671
  main321 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main287
                   Main.main322) -}
32705c788ba93225efef32898f3ff4bd
  main322 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main50
                   Main.main283) -}
8b2cd7a93ec7712dba86b47baba1f99f
  main323 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 6#) -}
0d4373fbabc0851bad9d025ff8dc8e3c
  main324 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main326
                   Main.main325) -}
3d6782855562661336167bc7940a9803
  main325 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main326
                   (GHC.Types.[] @ GHC.Types.Int)) -}
0e4acf2d1d16f11777996104f7942493
  main326 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3#) -}
1bd3e78ffb3fd9930390d0c315dc1e24
  main327 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
                   Main.main328
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither2
                   Main.$s$fShowEither4) -}
334164db8433970cec84d079ed0ee7af
  main328 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main329) -}
fbe83a1c32838c5abe84a80a8994b8b1
  main329 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main330) -}
55ebdf556bbd2080668d7238d1b87dea
  main33 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main34
                   GHC.Stack.Types.EmptyCallStack) -}
f12f964758a5b98494f71ac0cbab426a
  main330 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main331
                   GHC.Stack.Types.EmptyCallStack) -}
ddb74257a1e7679f281e59128d47f7b2
  main331 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main227
                   Main.main36
                   Main.main227
                   Main.main332) -}
391428bbe48574bdcaa9b6783b5129a6
  main332 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 105#) -}
b0c7c713cf226df2b0cd2f6a5c62f32f
  main333 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main334
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
9e649fc35f6961553e0d368538e79892
  main334 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main335) -}
3a9ede2cc73068a427da0ea48975a37d
  main335 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main336) -}
1eac8627467a363610a3467b4f4933e4
  main336 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main337) -}
e3a62bdf2078ac384381965e723d4b49
  main337 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main338) -}
23ecbd45154dabfe3344da5cc4878cc8
  main338 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main339
                   GHC.Stack.Types.EmptyCallStack) -}
4a5d833a725408dcaafb22474304e4b5
  main339 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main341
                   Main.main50
                   Main.main341
                   Main.main340) -}
670d53bff6ab2e3d937ec54e8574edd7
  main34 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main37
                   Main.main36
                   Main.main37
                   Main.main35) -}
c033556ffb18dc494cca67d6cca929ce
  main340 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 111#) -}
024cfd5129ea486157a1726acbf3c49d
  main341 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 43#) -}
96d6db02dfad23eb904f8b4dad93f3cd
  main342 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main273
                   Main.main343) -}
8aa16af8ea3e03144a341a4d41518968
  main343 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "lunkyTel: parse `clunky` Telephone (numbers, ., -) and return an `indicatif` if the length is 11"#) -}
79c44ef4845bbee3237a64796a3ebcc8
  main344 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main345
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
50f2c1a9d127232998253fae84cff811
  main345 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main346) -}
a3dffeccdc99df203b9f0d29df7a1e9f
  main346 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main363
                   Main.main354
                   GHC.Types.False
                   Main.main347
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
a9339874e9b12d7bf2b675200c3ffdc0
  main347 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main348) -}
2e6c323c7e0689bdb2928ac85a001e54
  main348 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main349
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main29
                   Main.main28) -}
2d0711027719102770f09e521a78dcb7
  main349 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main350
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
efed47e94eab6bbc05236c161a4c99a1
  main35 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 52#) -}
28f77051e781afab85ece4565bd7dfe1
  main350 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main351) -}
19f622fa94dc945844c28437a076cadf
  main351 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main352) -}
a080210d7fcb01499523d07cdcd5603e
  main352 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main353
                   GHC.Stack.Types.EmptyCallStack) -}
c9ed25306e9773f0a0dd8b8005b32a17
  main353 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main156
                   Main.main36
                   Main.main156
                   Main.main35) -}
a9e810395660baefb99abc12a5572190
  main354 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main355
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
b0af514734f5a2349c3829994ed5aaac
  main355 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main356) -}
074ce661855764d44511d512dcb49c78
  main356 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main357) -}
146264929916fd7fd9849b0b581286fe
  main357 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main358) -}
a872cdd5589e63d0648c3ec78559a4e9
  main358 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main359) -}
73a95e90cdfc2d22783b603990ba38df
  main359 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main360
                   GHC.Stack.Types.EmptyCallStack) -}
4560e29ab2b34755ffad634000ddc36e
  main36 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 13#) -}
8eadd2ab28be3879962cb84db8a079d3
  main360 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main362
                   Main.main50
                   Main.main362
                   Main.main361) -}
22c6911be02c5d1b8512d4b4da182d67
  main361 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 68#) -}
e800637a088100c582d1e50eb078ca9b
  main362 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40#) -}
b764ac8a0ec4fa663532b83fbccf3758
  main363 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main55
                   Main.main364) -}
0b28bc03d5d71fd414b6656cd6f48c31
  main364 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "erfectTel: error if indicatif's length is less than 2"#) -}
9f06fc1d9f41a1c82373ee5f38a7f07d
  main365 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main366
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
d1e90771844eebe9c105914c5a33f0e8
  main366 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main367) -}
e804dfb626dd5950ac39a21474118255
  main367 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main384
                   Main.main375
                   GHC.Types.False
                   Main.main368
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
79e213acdf61e1d2a187588ce07eca52
  main368 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main369) -}
5df215a0e4faaac6b995515bae29ab04
  main369 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main370
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main29
                   Main.main28) -}
5688f56c0c46361ed927f8b3c1e795f0
  main37 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 72#) -}
0636d0169afd48940bb60bb86f271414
  main370 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main371
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
8dbcd20931625120c93765bcdc2e984f
  main371 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main372) -}
687185bc04663626cf858d5a3d50529d
  main372 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main373) -}
4ec66a8d053abb1c621a443413880d35
  main373 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main374
                   GHC.Stack.Types.EmptyCallStack) -}
c9b6d0fd3fb61d489986a5457572a7b9
  main374 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main130
                   Main.main36
                   Main.main130
                   Main.main35) -}
f1e6bcc05caf3fe7132dc9e4af0306ff
  main375 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main376
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
963d1a1de14eab644c2369fbf54a6b71
  main376 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main377) -}
2705fbbec57eb6637ad39e83f2e83f53
  main377 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main378) -}
e38d741a924b2be998d1983ebcd1e32e
  main378 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main379) -}
4912c71bf3fe5925d82eb8bbfc5a62ea
  main379 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main380) -}
379c376c3cf3ca4d4f3a5d964e5d92b2
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Spec.hs"#) -}
1051394ce359ef9f72b44e048b25c78c
  main380 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main381
                   GHC.Stack.Types.EmptyCallStack) -}
44ec435ced24113db36f4cca43666da8
  main381 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main383
                   Main.main50
                   Main.main383
                   Main.main382) -}
e2910234323903a719392ac6e595c6e3
  main382 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41#) -}
66deeb6f1730834f9a27ab8104c3c1f5
  main383 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37#) -}
2ee6b599dec54f177989a9bf3b12304e
  main384 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main55
                   Main.main385) -}
28060282ecc7016c264e6628cef54162
  main385 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "erfectTel: error if no `+`"#) -}
acf8df439c728e1884dc1fb8bbf2b162
  main386 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main387
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
948ea3d14e5b49f65e737677c9c2e088
  main387 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main388) -}
1c0e54ea121c23c37c616cf73e902711
  main388 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main411
                   Main.main402
                   GHC.Types.False
                   Main.main389
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
6e168076c3c8adc80fdd9f4db981b403
  main389 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main390) -}
b37e77ccae25546f2d0290424807bebc
  main39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
e7db7f50519c8e40b8e96d77b39d5138
  main390 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main396
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main393
                   Main.main391
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either
                           Text.Parsec.Error.ParseError Types.Telephone>_R)) -}
98977981b25662e16885a75b567e1f82
  main391 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Types.Telephone
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.parseCell10
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Types.Telephone>_R))
                   GHC.Tuple.()
                   Main.main84
                   Main.main392) -}
a2574c211cc0d2883e43fc86074092b8
  main392 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "+336"#) -}
70d9c76332eca55589f0dd705acf7646
  main393 ::
    Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ Types.Telephone
                   Main.main394) -}
adf60d617c49f58de67d56e3b6f523ad
  main394 :: Types.Telephone
  {- HasNoCafRefs,
     Unfolding: (Types.Telephone Main.main324 Main.main395) -}
f6df77cc6309613c119585d20d2683ba
  main395 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main323
                   (GHC.Types.[] @ GHC.Types.Int)) -}
715f5c2c6ec5138d790aa0e7fa42f85d
  main396 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Telephone)
                   Main.main397
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither2
                   Main.$s$fShowEither4) -}
036be51fb7ee05a277ce2058c77ee23e
  main397 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main398) -}
b9e759eef9c9dd463e416651c0294ba2
  main398 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main399) -}
4023d678c78a0b7259d4827115898cd8
  main399 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main400
                   GHC.Stack.Types.EmptyCallStack) -}
a6da82900d040b16067dbf3c8150d024
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main464
                   Main.main5) -}
e9ff1d1ef32c793374b1e142f027ad04
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
0e5471196b980418ba8ed5be0b961526
  main400 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main401
                   Main.main36
                   Main.main401
                   Main.main305) -}
d62beb285bd0014ec63d807635d7062a
  main401 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 36#) -}
1e69641030c7164bcdb00724f528396d
  main402 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main403
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
f6bca41d8e0c89225ad8e8854a48ba7d
  main403 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main404) -}
09cb75b0e6fa11d221c5166a8eee0f25
  main404 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main405) -}
41e54549e2624ff98b0fd47479fd358b
  main405 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main406) -}
67dd5ba97fcf1f8ca43f9b7d7dd5ba8a
  main406 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main407) -}
4985e07048fb0988f4402f92a3dd543d
  main407 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main408
                   GHC.Stack.Types.EmptyCallStack) -}
91179f072f92a0a302a00a02c320d490
  main408 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main410
                   Main.main50
                   Main.main410
                   Main.main409) -}
47b18cfc55d6808762fbed542423701e
  main409 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 76#) -}
98cb3227994e4d435131edec1f6182b7
  main41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
6ae85d1f1f9f146198aa7272186ec3cf
  main410 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 35#) -}
a57ee8e71487d2941c01dbdde2a60e6c
  main411 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main55
                   Main.main412) -}
97d02ee947f8b662723fce35cf1303e1
  main412 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "erfectTel: parse `perfect` Telephone (a `+` and some numbers)"#) -}
d756ce403848c6bd5a21f774d063f165
  main413 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main414
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
e090c67ee7d2a7c419d6249d8d01ff0e
  main414 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main415) -}
4c6c07cf7867a798a85ffce8f4e7228f
  main415 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main435
                   Main.main427
                   GHC.Types.False
                   Main.main416
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
031720e40728f3407dbf65ecde675352
  main416 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main417) -}
08cba59ba24c336a66771f2c79c87576
  main417 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main421
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main420
                   Main.main418
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either
                           Text.Parsec.Error.ParseError GHC.Base.String>_R)) -}
e1eb2221e61b93debd34e8e36c8a3489
  main418 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Base.String
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.clunkyTel7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   GHC.Tuple.()
                   Main.main84
                   Main.main419) -}
fdb35b41845a5a24b98d59dcc9d97802
  main419 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "asdadd"#) -}
6bd88a498ca5992fb2a8701a913092df
  main42 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main43
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
f04ca790ea6dc6b15aadeb6e26571c5e
  main420 ::
    Data.Either.Either Text.Parsec.Error.ParseError [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2d494d3190e7c0d96d80bce9533a7361
  main421 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String)
                   Main.main422
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither1
                   Main.$s$fShowEither3) -}
074d2c21bfaeb6997b0dacc465f5c690
  main422 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main423) -}
5e7e736aa7569337a986bb86e3b327cf
  main423 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main424) -}
669c2f9e939e0f38f9be2b924cc9b033
  main424 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main425
                   GHC.Stack.Types.EmptyCallStack) -}
f206128f84bc915250c220212c94bef9
  main425 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main426
                   Main.main36
                   Main.main426
                   Main.main147) -}
7a36dc24ef7f4cd32fbaf0b51e7ffd4b
  main426 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 34#) -}
d0df322b69f6a0188a290645813394f6
  main427 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main428
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
ca8e9991f0f78c61206e8b16cf978081
  main428 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main429) -}
a9de253699a706da82f54862dfd3b6d7
  main429 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main430) -}
d65df22d1cb9b3d16587ad08e94f52d7
  main43 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main44) -}
3706a6e28da625696964955dfe4f34d4
  main430 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main431) -}
5c5aefe7ca0730cb9af27f9cca83f29c
  main431 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main432) -}
86efda70a8159a7c8bde09d5279c2893
  main432 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main433
                   GHC.Stack.Types.EmptyCallStack) -}
2831cf1b042fc256aa57e396ce123810
  main433 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main434
                   Main.main50
                   Main.main434
                   Main.main35) -}
bfc13745994005500291a61dc330d8e3
  main434 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 33#) -}
853a04462de2eed5116fe33ee04271d3
  main435 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main437
                   Main.main436) -}
09c6b3647647afd5b99513dfe5955d71
  main436 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "s: parse white space and nothing else"#) -}
e656ca5e26005d57098b809babb2ab66
  main437 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'w'#) -}
7b6390026aa956e54bc9a71c281c4545
  main438 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main439
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
bf7fe3278b85771c91861775d8d6cb93
  main439 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main440) -}
4faf62eb49d5fa73a8d802b51db7064f
  main44 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main45) -}
a9132e60b1ce926a68ca773b91e25a02
  main440 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main459
                   Main.main452
                   GHC.Types.False
                   Main.main441
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
0ab0c0522ab84f99ebd2db261d9e8224
  main441 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main442) -}
d95d07c39f1956fd0fa2b5fb88af4fcf
  main442 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main446
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main445
                   Main.main443
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either
                           Text.Parsec.Error.ParseError GHC.Base.String>_R)) -}
a14356ec0e0e173e81d4a665ef810878
  main443 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Base.String
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.clunkyTel7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   GHC.Tuple.()
                   Main.main84
                   Main.main444) -}
4aeff9cc2c61bcc923da1c93fd082695
  main444 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " "#) -}
6f211afb5e4e8b772fc0025a239ef7c5
  main445 ::
    Data.Either.Either Text.Parsec.Error.ParseError [GHC.Types.Char]
  {- Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ [GHC.Types.Char]
                   Main.main444) -}
40110117ddc9b82bd9482d7d477e1bfb
  main446 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError GHC.Base.String)
                   Main.main447
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither1
                   Main.$s$fShowEither3) -}
1b97af58a36f4b915bf9a9eda657197c
  main447 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main448) -}
b744c698fc6bd4b68054c8f04a2d6659
  main448 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main449) -}
5c0a75952f0f8e1e07f58aeed9e900d8
  main449 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main450
                   GHC.Stack.Types.EmptyCallStack) -}
5ae8d8a58499d3a046944fed62493769
  main45 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main46) -}
91ae70b0b3c0ef1a7f87b8a662c5778d
  main450 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main451
                   Main.main36
                   Main.main451
                   Main.main219) -}
5da1f284c82dfa9881a113e82bb92337
  main451 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32#) -}
991abac0ee43b301fd22a518a427683e
  main452 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main453
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
2d6522706a251763a8093ab77ded6004
  main453 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main454) -}
6787858e2989c4116d7cf53265670ce8
  main454 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main455) -}
f7ffc55f8784c7dd43882afc17390b75
  main455 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main456) -}
935ee1b6bdd2eaeddf9edf7bcf21a79a
  main456 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main457) -}
db4f2f688cc91f30d3f39eee0f911cbb
  main457 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main458
                   GHC.Stack.Types.EmptyCallStack) -}
16adc152986c2573f586f1716623e118
  main458 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main206
                   Main.main50
                   Main.main206
                   Main.main410) -}
78be74b8518961aa432972bcb0d78a02
  main459 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main437
                   Main.main460) -}
76fe1f006adba6db7212538a558acd53
  main46 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main47) -}
a39f12051e2e0e7c96546cd892dbb933
  main460 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "s: parse white space"#) -}
b3e02bb747511a591d3ca835e069a38e
  main461 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main463
                   Main.main462) -}
f61772eef3701ea8ffa787f36375be3f
  main462 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "scTest.Parser"#) -}
f549279d7534ae34b8e831a7d22d5685
  main463 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'I'#) -}
2b54f0ffd49852772317c29bdaaf1d4f
  main464 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main546
                   Main.main465) -}
9c87dacdc670235f811edc15e93ca9ca
  main465 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main520
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main466) -}
184d81f6ec7df1a01077a97b735f1efa
  main466 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main496
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main467
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
2c2ca6b02e872433ba0e690d8f482edc
  main467 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main468
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
07dff1299ec2e034dee7f80cdc2b5335
  main468 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main469) -}
7a5d291dc4fb7ebd1c704d0de35c7a75
  main469 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main493
                   Main.main484
                   GHC.Types.False
                   Main.main470
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
1ed9fa0af70bd5a6300799e6789a5152
  main47 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main48
                   GHC.Stack.Types.EmptyCallStack) -}
0ae113bc9c514ddc87f1fbffd5f7171a
  main470 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main471) -}
c60836ce3c322f44d26e3ec24b9b360b
  main471 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main477
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main476
                   Main.main472) -}
c6ea8e27a68af6cb319a4843d147ddcf
  main472 :: GHC.Types.Int
  {- Unfolding: (case Types.$wgo Main.main473 0# of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
bdc7482e178a43b86634b151339f60f5
  main473 :: [Types.Telephone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Telephone
                   Main.main317
                   Main.main474) -}
1dbf6e07112716163590d9a02f10336f
  main474 :: [Types.Telephone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Telephone
                   Main.main475
                   (GHC.Types.[] @ Types.Telephone)) -}
f0d092e0f62606323784aca32fad778b
  main475 :: Types.Telephone
  {- HasNoCafRefs,
     Unfolding: (Types.Telephone
                   (GHC.Types.[] @ GHC.Types.Int)
                   (GHC.Types.[] @ GHC.Types.Int)) -}
904d1d4beb7d00a2d23d2662d1cd2efa
  main476 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
86adabd55e3235da56a807e807b4d04a
  main477 ::
    GHC.Base.String
    -> GHC.Types.Int -> GHC.Types.Int -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Types.Int
                   Main.main478
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEqInt
                   GHC.Show.$fShowInt) -}
b29bb94f0c4af6406a0a5e609b3edbae
  main478 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main479) -}
fb182aaad8d7fa470f29eba94e47d166
  main479 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main480) -}
752d606a6f31e6a677a0a1fca69bcb6c
  main48 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main51
                   Main.main50
                   Main.main51
                   Main.main49) -}
081571506ab83b86040e7403f3e7cf21
  main480 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main481
                   GHC.Stack.Types.EmptyCallStack) -}
b0f0e71eba67555aeda6ce8b0a188fe5
  main481 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main483
                   Main.main36
                   Main.main483
                   Main.main482) -}
18aec18d971f7c31076b9b9bec84eb2f
  main482 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 92#) -}
c52dc7460e79fd379604e45c409453ec
  main483 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29#) -}
7d669e80ec5334000db7024d6839088f
  main484 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main485
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
0c42f3ecf6b12a7908f47052131134b5
  main485 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main486) -}
c992fdf5c511db40e5a1aa5479d6a7c5
  main486 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main487) -}
4c07190350a4defa0f672afef2a989a5
  main487 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main488) -}
ff06315fe114656f6f7d12d2d9d1e746
  main488 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main489) -}
3da52e13de8c33498c01338201dc5012
  main489 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main490
                   GHC.Stack.Types.EmptyCallStack) -}
9b21ba0b9263f2a4bc6c0eec856f0774
  main49 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51#) -}
6e8593fed4ef6d432cac2823d925a0d5
  main490 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main492
                   Main.main50
                   Main.main492
                   Main.main491) -}
f3557f51b9afb8683ed114826a4785a2
  main491 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 90#) -}
233f94033246700552d837c3bd458ff1
  main492 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28#) -}
e7cf4359107f7cc717772578f0358df2
  main493 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main495
                   Main.main494) -}
d62f286224c971aefba74041ecfdc96d
  main494 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Telephones: count the number of `good` Telephone (checked with igTelephone)"#) -}
fd3c7b3f9422f210eebb807722afee8a
  main495 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'g'#) -}
1ee075b029c9909eac0ec6fa6c57dd3f
  main496 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main497
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
9c05d2d5417b0a00685f6ef061024a1b
  main497 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main498) -}
e0daea3a58a0ac03d9bff4cb3aac5ee5
  main498 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main517
                   Main.main509
                   GHC.Types.False
                   Main.main499
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
4b46830c2fc20ff4fe4b5dcfd2cb8c8a
  main499 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main500) -}
c428a7f0a3c9e91da10af8f89da35b1c
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main6
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
c5832cb32b760adf16f2583d2765ce96
  main50 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 9#) -}
03f9961c3a0d16539dd1c54627437a70
  main500 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main502
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ Types.Telephone)
                   Main.main501) -}
c11c93950a5df4f23d9a1f468948a7c9
  main501 :: [Types.Telephone]
  {- Unfolding: (Types.telephone (GHC.Types.[] @ Types.Cell)) -}
d129f3eea09ebb3fa61d100bda9e9d66
  main502 ::
    GHC.Base.String
    -> [Types.Telephone]
    -> [Types.Telephone]
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ [Types.Telephone]
                   Main.main503
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEq[]
                   Main.$s$fShow[]) -}
83a3bc8c020595074ea673da8572048d
  main503 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main504) -}
1745cfe95937b76805d6f484a8700493
  main504 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main505) -}
4e3dfb1a91140f6122e9d3f328b3cd5b
  main505 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main506
                   GHC.Stack.Types.EmptyCallStack) -}
dd5573f5e3399d3de56fdd22afab9f5a
  main506 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main508
                   Main.main507
                   Main.main508
                   Main.main178) -}
207bd24b7bce593256e413f0bca8b57e
  main507 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12#) -}
1d4029608f9d1c8a043a2f91e2c50f4f
  main508 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27#) -}
89227ceb2570f19f761a8cfd352b6cc6
  main509 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main510
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
c05674681b89e3382cb796d265bdf40e
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 70#) -}
4b40da03be6fb63800528ae528df372f
  main510 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main511) -}
16d363ae857f8f8d8dd6dd6f8b8bac79
  main511 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main512) -}
85ca8f445341bc2ec1fce88c7f65e4c2
  main512 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main513) -}
8acaf83dbaa2fef9e86d94177ec6d8d5
  main513 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main514) -}
6c72d314ea656bd606c3a5aa695d8e72
  main514 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main515
                   GHC.Stack.Types.EmptyCallStack) -}
913ca86494101788c345749cc625dc18
  main515 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main516
                   Main.main50
                   Main.main516
                   Main.main170) -}
3dc94c43c6da8c94dcb08eb0e1497472
  main516 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 26#) -}
9ec7533b86d98afe3b82cda6859ecd10
  main517 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main519
                   Main.main518) -}
f8b7e0ee72caf081c31a78af00ff2c62
  main518 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "elephone: if the argument is [] it return []"#) -}
629d439cf424dda7413157c282803274
  main519 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 't'#) -}
c847ef6f2dc753f6e8fd24c8cb0afe47
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
44c94ab75d0b94a056859441c67fef92
  main520 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main521
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
2675fb6f130c9827dba5ae8db2c5ae76
  main521 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main522) -}
97ce44547370597b49684592f825f426
  main522 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main544
                   Main.main536
                   GHC.Types.False
                   Main.main523
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
82760a94b5d976ac3661d2e288af3281
  main523 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main524) -}
89a3d4128221280784717f8aa2e69d2e
  main524 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main529
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main474
                   Main.main525) -}
c19b018ead965ec1cc6fe4bacc228d8c
  main525 :: [Types.Telephone]
  {- Unfolding: (Types.telephone Main.main526) -}
8b4aa1c9df008e44cf3fa6a8bcab42a2
  main526 :: [Types.Cell]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.: @ Types.Cell Main.main528 Main.main527) -}
563bd7473d51d9089f19568b09bcda59
  main527 :: [Types.Cell]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Cell
                   Types.Empty
                   (GHC.Types.[] @ Types.Cell)) -}
93e7b16e6f243f854d352d5e3a810573
  main528 :: Types.Cell
  {- HasNoCafRefs, Unfolding: (Types.T Main.main475) -}
a6b788cec4f0d23b2c7b2c6866275a80
  main529 ::
    GHC.Base.String
    -> [Types.Telephone]
    -> [Types.Telephone]
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ [Types.Telephone]
                   Main.main530
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEq[]
                   Main.$s$fShow[]) -}
ba84120362a18c245bb27730db3db68c
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main55
                   Main.main54) -}
f61cf6b5869ce789f63a70db0139e0d9
  main530 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main531) -}
1554d61fb1f8647c10d52f4354e502df
  main531 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main532) -}
04bd6ab0d7d1d93caa7947623fdc1b8b
  main532 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main533
                   GHC.Stack.Types.EmptyCallStack) -}
67a343e68fa7386cdc11da6d53f9174b
  main533 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main535
                   Main.main507
                   Main.main535
                   Main.main534) -}
8da30fc702b00a358f20aeddc3732426
  main534 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 79#) -}
072e60be5e50c78d2e6efbd709cd7248
  main535 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25#) -}
d0d6a25e9886102387cdb730f37a721d
  main536 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main537
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
5c5769a689c9bdc9cd5fe86dc5268da1
  main537 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main538) -}
a2e69621996f84e697987a8a6fd9a292
  main538 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main539) -}
ed21018d57778eb7779a942fe1a50879
  main539 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main540) -}
0f948f0022a9ef73e238de4b3f164bad
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "arseLine: error if more than 6 cells"#) -}
6e66d5129c2797cd3cf7ca3fd3928af8
  main540 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main541) -}
d5edb652019744878bd70f456accf377
  main541 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main542
                   GHC.Stack.Types.EmptyCallStack) -}
0da400f5cf4c7a48cbc1c4757e50d1b2
  main542 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main543
                   Main.main50
                   Main.main543
                   Main.main131) -}
e1472f11270af78d0f8bb10aca7f4d04
  main543 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 24#) -}
01cdd33cc08a6630ff49c545c2147f72
  main544 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main519
                   Main.main545) -}
d35bf01ea86bf39192b9481547d3686e
  main545 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "elephone: extract all the Telephone from a Line"#) -}
76792b74edc25decdf46df353cf31a80
  main546 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main463
                   Main.main547) -}
fb8868189af2354ce9b2a0432fa893c9
  main547 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "scTest.Types"#) -}
9ed2cf0e50284e2853363fb64395ad15
  main548 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
743938eff05f7a91d95d4f77adecad60
  main55 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'p'#) -}
5089e8c5d943768e83569111096ffd7b
  main56 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main57
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
0a7d85be9bc353134e8041c20968549e
  main57 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main58) -}
205da59dea0c3e5a499798e2d3b404a6
  main58 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main75
                   Main.main67
                   GHC.Types.False
                   Main.main59
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
ae5bd529c9cf6092ff447e7bf157b2a1
  main59 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main60) -}
2cf41bfce19e5cb68272661b97fa5211
  main6 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main461
                   Main.main7) -}
4cced1c5ecb72ddc6a8ba0df7987acac
  main60 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main61
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main29
                   Main.main28) -}
58e651126f2d7d77312e26e7c3198559
  main61 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main62
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
f6d3cc69beefedd9c9dd46db07121128
  main62 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main63) -}
a44a5a303cab770b31dff3e1455bd1e9
  main63 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main64) -}
97dc96f04acb93b16cc9e5380365a30d
  main64 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main65
                   GHC.Stack.Types.EmptyCallStack) -}
c23650d28a90d067f3921a272a108a54
  main65 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main66
                   Main.main36
                   Main.main66
                   Main.main35) -}
9988d1536c317d0621678bd470837ff7
  main66 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 69#) -}
f47bdd63901da6a5ef733ba88c14c724
  main67 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main68
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
02cf024382adb47500f6fee6812721dc
  main68 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main69) -}
17185637a17ba409333e45cfa8b57b20
  main69 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main70) -}
79adf22b7cca65ca7977436218e88a51
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main438
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main8) -}
416fa6991fcbc7cf0727792c163fe86d
  main70 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main71) -}
667d46df2c62ea9f2aa4a559766eef96
  main71 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main72) -}
ac9b70744234caddc8a1651cde62999c
  main72 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main73
                   GHC.Stack.Types.EmptyCallStack) -}
2def6ec84cb51ac9e7ef3d5844613e4e
  main73 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main74
                   Main.main50
                   Main.main74
                   Main.main49) -}
5f2adc08feb1b7894eb1289ba64aaf42
  main74 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 67#) -}
36f19bc9e1ef78d93f43c7e64c540df9
  main75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main55
                   Main.main76) -}
8cdc551ff7380540c1654e4159b46af3
  main76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "arseLine: error if less than 6 cells"#) -}
12210c0ea7b53094c07b509fd24eb41e
  main77 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main78
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
1a6bc34add485c712791fb7d66ec3110
  main78 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main79) -}
95972add4498527986096122fc7ea4ab
  main79 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main110
                   Main.main101
                   GHC.Types.False
                   Main.main80
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
e1f7c07850d817526718df379f5afae1
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main413
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main9) -}
8429c68ba4ee8b777c4b61af231a4f0f
  main80 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main81) -}
51171b6eb0a6dfb7b6e7493216c99e78
  main81 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main94
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main85
                   Main.main82
                     `cast`
                   (Data.Functor.Identity.N:Identity[0]
                        <Data.Either.Either Text.Parsec.Error.ParseError Types.Line>_R)) -}
55d721a206a381d5893a7d919aa093ba
  main82 ::
    Data.Functor.Identity.Identity
      (Data.Either.Either Text.Parsec.Error.ParseError Types.Line)
  {- Unfolding: (Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Types.Line
                   (Main.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.parseLine1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Types.Line>_R))
                   GHC.Tuple.()
                   Main.main84
                   Main.main83) -}
a8094918347492ae0dcfe5c8c636983d
  main83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "a,a,a,a,a,a"#) -}
eb55d690cd727b1b4c03dfa08b64cbaa
  main84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "error"#) -}
b25ba690f93be699841ec36636f25fb3
  main85 ::
    Data.Either.Either Text.Parsec.Error.ParseError [Types.Cell]
  {- Unfolding: (Data.Either.Right
                   @ Text.Parsec.Error.ParseError
                   @ [Types.Cell]
                   Main.main86) -}
095176298731fc2f8f7760591720d533
  main86 :: [Types.Cell]
  {- Unfolding: (GHC.Types.: @ Types.Cell Main.main92 Main.main87) -}
9505272ffe74b63174e7f2d4ee186a53
  main87 :: [Types.Cell]
  {- Unfolding: (GHC.Types.: @ Types.Cell Main.main92 Main.main88) -}
3ffe403356d2ff06ada70e93d3717075
  main88 :: [Types.Cell]
  {- Unfolding: (GHC.Types.: @ Types.Cell Main.main92 Main.main89) -}
4559a3e78c23f576c7159cd1375713e8
  main89 :: [Types.Cell]
  {- Unfolding: (GHC.Types.: @ Types.Cell Main.main92 Main.main90) -}
90daba4128e93cd737a88dcc1fca7360
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main386
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main10) -}
bde339de6a4f0fc6e3fe83773de5d475
  main90 :: [Types.Cell]
  {- Unfolding: (GHC.Types.: @ Types.Cell Main.main92 Main.main91) -}
75d2cf12901ea22cac6662aa09bd4d66
  main91 :: [Types.Cell]
  {- Unfolding: (GHC.Types.:
                   @ Types.Cell
                   Main.main92
                   (GHC.Types.[] @ Types.Cell)) -}
6357681e8b7e28922893d51e314bf0e9
  main92 :: Types.Cell
  {- Unfolding: (Types.SF Main.main93) -}
16f61881156e291cee20c26729abbd00
  main93 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "a"#) -}
d1718cdc8713e9847ef23f99d66b5720
  main94 ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Line
    -> Data.Either.Either Text.Parsec.Error.ParseError Types.Line
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either Text.Parsec.Error.ParseError Types.Line)
                   Main.main95
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither) -}
af7d68e7bff950813ee3bbd96227de49
  main95 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main96) -}
0a9d253cde34f8f41dd976ddb461092d
  main96 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main97) -}
36f72d03cd046f8654ef19bd5e8d70c4
  main97 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main98
                   GHC.Stack.Types.EmptyCallStack) -}
f9c8af024cce3fc36de23ad993cee3b3
  main98 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main38
                   Main.main100
                   Main.main36
                   Main.main100
                   Main.main99) -}
c9e3d9d936295d4cbb053d00d784d753
  main99 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 116#) -}
instance Test.QuickCheck.Arbitrary.Arbitrary [Types.Cell]
  = Main.$fArbitraryCell
instance Test.QuickCheck.Arbitrary.Arbitrary [Types.Telephone]
  = Main.$fArbitraryTelephone
"SPEC/Main $fEqEither @ ParseError @ Cell" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                       Text.Parsec.Error.ParseError)
                                                           ($dEq :: GHC.Classes.Eq Types.Cell)
  Data.Either.$fEqEither @ Text.Parsec.Error.ParseError
                         @ Types.Cell
                         $dEq
                         $dEq1
  = Main.$s$fEqEither4
"SPEC/Main $fEqEither @ ParseError @ Char" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                       Text.Parsec.Error.ParseError)
                                                           ($dEq :: GHC.Classes.Eq GHC.Types.Char)
  Data.Either.$fEqEither @ Text.Parsec.Error.ParseError
                         @ GHC.Types.Char
                         $dEq
                         $dEq1
  = Main.$s$fEqEither3
"SPEC/Main $fEqEither @ ParseError @ Telephone" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                            Text.Parsec.Error.ParseError)
                                                                ($dEq :: GHC.Classes.Eq
                                                                           Types.Telephone)
  Data.Either.$fEqEither @ Text.Parsec.Error.ParseError
                         @ Types.Telephone
                         $dEq
                         $dEq1
  = Main.$s$fEqEither2
"SPEC/Main $fEqEither @ ParseError @ [Cell]" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                         Text.Parsec.Error.ParseError)
                                                             ($dEq :: GHC.Classes.Eq [Types.Cell])
  Data.Either.$fEqEither @ Text.Parsec.Error.ParseError
                         @ [Types.Cell]
                         $dEq
                         $dEq1
  = Main.$s$fEqEither
"SPEC/Main $fEqEither @ ParseError @ [Char]" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                         Text.Parsec.Error.ParseError)
                                                             ($dEq :: GHC.Classes.Eq
                                                                        [GHC.Types.Char])
  Data.Either.$fEqEither @ Text.Parsec.Error.ParseError
                         @ [GHC.Types.Char]
                         $dEq
                         $dEq1
  = Main.$s$fEqEither1
"SPEC/Main $fEq[] @ Cell" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                     Types.Cell)
  GHC.Classes.$fEq[] @ Types.Cell $dEq = Main.$s$fEqEither_$s$fEq[]
"SPEC/Main $fEq[] @ Telephone" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                          Types.Telephone)
  GHC.Classes.$fEq[] @ Types.Telephone $dEq = Main.$s$fEq[]
"SPEC/Main $fEq[]_$c/= @ Cell" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                          Types.Cell)
  GHC.Classes.$fEq[]_$c/= @ Types.Cell $dEq
  = Main.$s$fEqEither_$s$fEq[]_$c/=
"SPEC/Main $fEq[]_$c/= @ Telephone" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                               Types.Telephone)
  GHC.Classes.$fEq[]_$c/= @ Types.Telephone $dEq
  = Main.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/Main $fShowEither @ ParseError @ Cell" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                           Text.Parsec.Error.ParseError)
                                                             ($dShow :: GHC.Show.Show Types.Cell)
  Data.Either.$fShowEither @ Text.Parsec.Error.ParseError
                           @ Types.Cell
                           $dShow
                           $dShow1
  = Main.$s$fShowEither6
"SPEC/Main $fShowEither @ ParseError @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                           Text.Parsec.Error.ParseError)
                                                             ($dShow :: GHC.Show.Show
                                                                          GHC.Types.Char)
  Data.Either.$fShowEither @ Text.Parsec.Error.ParseError
                           @ GHC.Types.Char
                           $dShow
                           $dShow1
  = Main.$s$fShowEither5
"SPEC/Main $fShowEither @ ParseError @ Telephone" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                Text.Parsec.Error.ParseError)
                                                                  ($dShow :: GHC.Show.Show
                                                                               Types.Telephone)
  Data.Either.$fShowEither @ Text.Parsec.Error.ParseError
                           @ Types.Telephone
                           $dShow
                           $dShow1
  = Main.$s$fShowEither4
"SPEC/Main $fShowEither @ ParseError @ [Cell]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                             Text.Parsec.Error.ParseError)
                                                               ($dShow :: GHC.Show.Show
                                                                            [Types.Cell])
  Data.Either.$fShowEither @ Text.Parsec.Error.ParseError
                           @ [Types.Cell]
                           $dShow
                           $dShow1
  = Main.$s$fShowEither
"SPEC/Main $fShowEither @ ParseError @ [Char]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                             Text.Parsec.Error.ParseError)
                                                               ($dShow :: GHC.Show.Show
                                                                            [GHC.Types.Char])
  Data.Either.$fShowEither @ Text.Parsec.Error.ParseError
                           @ [GHC.Types.Char]
                           $dShow
                           $dShow1
  = Main.$s$fShowEither3
"SPEC/Main $fShowEither_$cshowList @ ParseError @ Cell" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                      Text.Parsec.Error.ParseError)
                                                                        ($dShow :: GHC.Show.Show
                                                                                     Types.Cell)
  Data.Either.$fShowEither_$cshowList @ Text.Parsec.Error.ParseError
                                      @ Types.Cell
                                      $dShow
                                      $dShow1
  = Main.$s$fShowEither_$s$fShowEither_$cshowList3
"SPEC/Main $fShowEither_$cshowList @ ParseError @ Char" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                      Text.Parsec.Error.ParseError)
                                                                        ($dShow :: GHC.Show.Show
                                                                                     GHC.Types.Char)
  Data.Either.$fShowEither_$cshowList @ Text.Parsec.Error.ParseError
                                      @ GHC.Types.Char
                                      $dShow
                                      $dShow1
  = Main.$s$fShowEither_$s$fShowEither_$cshowList2
"SPEC/Main $fShowEither_$cshowList @ ParseError @ Telephone" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                           Text.Parsec.Error.ParseError)
                                                                             ($dShow :: GHC.Show.Show
                                                                                          Types.Telephone)
  Data.Either.$fShowEither_$cshowList @ Text.Parsec.Error.ParseError
                                      @ Types.Telephone
                                      $dShow
                                      $dShow1
  = Main.$s$fShowEither_$s$fShowEither_$cshowList1
"SPEC/Main $fShowEither_$cshowList @ ParseError @ [Char]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                        Text.Parsec.Error.ParseError)
                                                                          ($dShow :: GHC.Show.Show
                                                                                       [GHC.Types.Char])
  Data.Either.$fShowEither_$cshowList @ Text.Parsec.Error.ParseError
                                      @ [GHC.Types.Char]
                                      $dShow
                                      $dShow1
  = Main.$s$fShowEither_$s$fShowEither_$cshowList
"SPEC/Main $fShow[] @ Cell" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                         Types.Cell)
  GHC.Show.$fShow[] @ Types.Cell $dShow
  = Main.$s$fShowEither_$s$fShow[]
"SPEC/Main $fShow[] @ Telephone" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                              Types.Telephone)
  GHC.Show.$fShow[] @ Types.Telephone $dShow = Main.$s$fShow[]
"SPEC/Main $fShow[]_$cshow @ Cell" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                Types.Cell)
  GHC.Show.$fShow[]_$cshow @ Types.Cell $dShow
  = Main.$s$fShowEither_$s$fShow[]_$cshow
"SPEC/Main $fShow[]_$cshow @ Telephone" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                     Types.Telephone)
  GHC.Show.$fShow[]_$cshow @ Types.Telephone $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshow
"SPEC/Main $fShow[]_$cshowList @ Cell" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                    Types.Cell)
  GHC.Show.$fShow[]_$cshowList @ Types.Cell $dShow
  = Main.$s$fShowEither_$s$fShow[]_$cshowList
"SPEC/Main $fShow[]_$cshowList @ Telephone" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                         Types.Telephone)
  GHC.Show.$fShow[]_$cshowList @ Types.Telephone $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowList
"SPEC/Main $fShow[]_$cshowsPrec @ Cell" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                     Types.Cell)
  GHC.Show.$fShow[]_$cshowsPrec @ Types.Cell $dShow
  = Main.$s$fShowEither_$s$fShow[]_$cshowsPrec
"SPEC/Main $fShow[]_$cshowsPrec @ Telephone" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                          Types.Telephone)
  GHC.Show.$fShow[]_$cshowsPrec @ Types.Telephone $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
"SPEC/Main $fStream[]mtok @ Identity _" [ALWAYS] forall @ tok
                                                        ($dMonad :: GHC.Base.Monad
                                                                      Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  $dMonad
  = Main.$s$fStream[]mtok @ tok
"SPEC/Main $fStream[]mtok_$cp1Stream @ Identity _" [ALWAYS] forall @ tok
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cp1Stream @ Data.Functor.Identity.Identity
                                             @ tok
                                             $dMonad
  = Main.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok
"SPEC/Main $fStream[]mtok_$cuncons @ Identity _" [ALWAYS] forall @ tok
                                                                 ($dMonad :: GHC.Base.Monad
                                                                               Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = Main.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

